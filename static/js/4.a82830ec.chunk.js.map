{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","to","Name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","polevvoda","Field","textarea","component","Textarea","validate","required","name","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","dialogsItems","messager","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,UAAY,2BAA2B,OAAS,wBAAwB,SAAW,4B,sFCW3MC,EATI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAaC,IAAQC,OAA1B,SACH,cAAC,IAAD,CAASC,GAAML,EAAf,SAAsBD,EAAMO,UCFrBC,EAJC,SAACR,GACb,OAAO,qBAAKG,UAAWC,IAAQK,QAAxB,SAAkCT,EAAMS,W,kCCyB/CC,EAAcC,YAAiB,IAe7BC,EAAsBC,YAAU,CAAEC,KAAM,yBAAlBD,EAbL,SAACb,GACpB,OACI,uBAAMe,SAAYf,EAAMgB,aACpBb,UAAWC,IAAQa,UADvB,UAEI,cAACC,EAAA,EAAD,CAAOf,UAAaC,IAAQe,SAAUC,UAAWC,IACzCC,SAAY,CAACC,IAAUb,GACvBc,KAAK,mBAEb,gDAOGC,EAtCC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAEP,KAAMtB,GAAI6B,EAAE7B,IAAS6B,EAAE7B,OACnF8B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASzB,QAASyB,EAAEzB,SAAcyB,EAAEhC,OAMlF,OAAO,sBAAKC,UAAWC,IAAQyB,QAAxB,UACH,qBAAK1B,UAAWC,IAAQ+B,aAAxB,SACKP,IAEL,qBAAKzB,UAAWC,IAAQgC,SAAxB,SACKJ,IAEL,cAACpB,EAAD,CAAqBG,SAXL,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOE,uB,uBCKlBC,sBACXC,aAfkB,SAACf,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGZf","file":"static/js/4.a82830ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3CG1a\",\"dialogsItems\":\"Dialogs_dialogsItems__10SUr\",\"messager\":\"Dialogs_messager__1DVGr\",\"polevvoda\":\"Dialogs_polevvoda__12W9Z\",\"button\":\"Dialogs_button__2WxDl\",\"textarea\":\"Dialogs_textarea__30248\"};","import classes from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className = {classes.dialog}>\r\n        <NavLink to = {path}>{props.Name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem","import classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport classes from './Dialogs.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem Name={d.name} id={d.id} key={d.id} />)\r\n    let messagesElement = state.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody); // название заданное в филде\r\n    }\r\n\r\n    return <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n            {dialogsElement}\r\n        </div>\r\n        <div className={classes.messager}>\r\n            {messagesElement}\r\n        </div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n}\r\nlet maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}\r\n            className={classes.polevvoda}>\r\n            <Field className = {classes.textarea} component={Textarea}\r\n                    validate = {[required, maxLength50]}\r\n                    name='newMessageBody'>\r\n            </Field>\r\n            <button>SEND</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogsAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs","import { sendMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux'\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => { //отвечает за данные\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => { //отвечает за отправление данных через коллбеки\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose ( // это конвеер, он вызывает функцию(снизу в верх) и передаёт её результат выше по списку\r\n    connect(mapStateToProps, mapDispatchToProps), //рисует презентационную компаненту и передаёт ей данные из полученных функций\r\n    withAuthRedirect,\r\n) (Dialogs)"],"sourceRoot":""}